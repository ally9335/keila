<div class="container flex py-8 sm:py-11 sm:mb-4">
    <div class="flex-grow gap-4 flex flex-col-reverse sm:flex-row sm:items-center max-w-md">
        <h1 class="text-2xl md:text-3xl text-gray-100">
            <%= gettext("New Campaign") %>
        </h1>
        <div class="flex-grow flex flex-row justify-end gap-4 sm:flex-row">
            <button form="form" class="button button--cta button--large">
                <%= gettext("Save") %>
            </button>
        </div>
    </div>
</div>

<div class="container">
    <.form
        let={f}
        for={@changeset}
        id="form"
        action={Routes.campaign_path(@conn, :post_new, @current_project.id)}
        class="max-w-md flex flex-col gap-4"
        x-data="{type: null}"
        x-init="type = $el.querySelector('[name=\'campaign[settings][type]\']').value"
    >

        <div class="inline-form-row">
                <%= label(f, :sender_id, gettext("Sender")) %>

                <%= if not Enum.empty?(@senders) do %>
                    <%= with_validation(f, :sender_id) do %>
                        <%= select(f, :sender_id, Enum.map(@senders, &{"#{&1.name} (#{&1.from_name} <#{&1.from_email}>)", &1.id}), class: "text-black") %>
                    <% end %>
                <% else %>
                    <p>
                        <a href={ Routes.sender_path(@conn, :new, @current_project.id) } class="button button--muted">
                            <%= gettext("Create your first sender") %>
                        </a>
                    </p>
                <% end %>
            </div>

        <div class="flex flex-col">
            <%= label(f, :subject, gettext("Subject")) %>
            <%= with_validation(f, :subject) do %>
                <%= text_input(f, :subject, placeholder: gettext("My Campaign Subject"), class: "text-black", autofocus: true) %>
            <% end %>
        </div>

        <div class="inline-form-row">
            <%= label(f, :segment_id, gettext("Segment")) %>

            <%= with_validation(f, :segment_id) do %>
                <%= select(f, :segment_id, [{gettext("All Contacts"), nil}] ++ Enum.map(@segments, &{&1.name, &1.id}), class: "text-black") %>
            <% end %>
        </div>

        <div class="form-row-checkbox">
            <%= inputs_for(f, :settings, fn fs -> %>
                <%= checkbox(fs, :do_not_track, checked_value: "false", unchecked_value: "true") %>
                <%= label(fs, :do_not_track, gettext("Enable click/open tracking")) %>
            <% end) %>
        </div>

        <div class="form-row">
            <%= inputs_for(f, :settings, fn fs -> %>
                <%= label(fs, :type, gettext("Campaign Type")) %>
                <%= select(fs, :type, [
                    {gettext("Markdown"), "markdown"},
                    {gettext("Text only"), "text"}
                ], [x_model: "type"]) %>
            <% end) %>
        </div>

        <template x-if="type === 'markdown'">
            <div class="form-row-checkbox">
                <%= inputs_for(f, :settings, fn fs -> %>
                    <%= checkbox(fs, :enable_wysiwyg) %>
                    <%= label(fs, :enable_wysiwyg, gettext("Enable rich text editor")) %>
                <% end) %>
            </div>
        </template>
        <template x-if="type === 'markdown'">
            <div class="form-row">
                <%= label(f, :template_id, gettext("Template")) %>

                <%= with_validation(f, :template_id) do %>
                    <%= select(f, :template_id, [{gettext("Default"), nil} | Enum.map(@templates, &{&1.name, &1.id})], class: "text-black") %>
                <% end %>
            </div>
        </template>

        <div class="form-row md:col-span-full">
            <%= label(f, :segment_id, gettext("Campaign data")) %>
            <span class="block text-sm mb-2"><%= gettext("You can add any JSON object as custom data to your campaign.") %></span>
            <%= with_validation(f, :data) do %>
                <%= case input_value(f, :data) do %>
                <% data when is_map(data) -> %>
                    <%= textarea(f, :data, value: Jason.encode!(data), class: "text-white bg-gray-900", rows: 5) %>
                <% _other ->  %>
                    <%= textarea(f, :data, class: "text-white bg-gray-900", rows: 5) %>
                <% end %>
            <% end %>
        </div>

        <div class="flex">
            <button class="button button--cta button--large">
                <%= gettext("Create campaign") %>
            </button>
        </div>
    </.form>
</div>